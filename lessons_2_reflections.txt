What happens when you initialize a repository? Why do you need to do it?

A folder with metadata is created. No track of any folder is done until you do something else. 


How is the staging area different from the working directory 
and the repository? What value do you think it offers?

Staging area is the folder that are about to be commited but 
they haven't been yet created. Working directory is any 
directory, I guess. A repository is a fully functionning file 
versionning. 

How can you use the staging area to make sure you have one commit per logical change?

You can use the command git add to add only the changed files 
to the staging area. staging area is an state between working 
directory and a commit. Once all your files to be commited 
are in the staging area, you can commit.



What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Whenever you want to create a different version of your code, 
for example, a different color, or an experiment, you can 
create a branch to do it. Even if you keep modifying the 
original game, you will be able then to merge them. 


How do the diagrams help you visualize the branch structure?

Diagrams give you the possibility to understand which commits 
are reachable by the actual head. Using checkout changes the 
head for another branch, but may erase actual information of 
another commit if it is not reachable. Diagrams helps you 
control this. 


What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

this results in adding lines added into one branch into the master branch. 
It is represented as the union of two branches because one can be deletted 
as its informations or features exists already on master branch